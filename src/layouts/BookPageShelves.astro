---
import { getCollection, getEntry, getEntries, render } from "astro:content";
import { ClientRouter } from "astro:transitions";

import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

import BookShelfHeader from "../components/BookShelfHeader.astro";
import BookShelf from "../components/BookShelf.astro";

import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";

// Today
const storesData = (await getCollection("store2025")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);
const today = storesData[0];
const heroBook = await getEntry(today.data.heroBook);
const shelves = await getEntries(today.data.selectedShelves);
const { Content } = await render(today);

const layoutShelves = today.data.type === "shelves";
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <ClientRouter />
  </head>
  <body class={`bg-neutral-200 text-neutral-600`}>
    <Header theme={today.data.theme} date={today.data.date} />
    <main
      class={`
				grid
				md:grid-rows-5 md:grid-cols-10 md:grid-flow-dense
			`}
    >
      <BookShelfHeader book={heroBook} class={`pc-grid-pos-1`}>
        <Content />
      </BookShelfHeader>
      {
        shelves.map((shelf, index) => (
          <BookShelf
            books={shelf.data.selectedBooks}
            num={index + 2}
            layout={shelf.data.layout}
            shelf={shelf}
          />
        ))
      }
    </main>
    <Footer />
  </body>
</html>
